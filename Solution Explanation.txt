Hello,
I used Java and NetBeans IDE 8.2 to make solution for offside position.
To start application you need NetBeans for Java and you need to import my project.When you do that and open project there should be one package package1 and in that package should be classes Teams, OffsidePosition and Main class.Source files are in src\package1.
Application is supposed to be started from Main class. 
In class Teams there are attribute teams(matrix of integers) ,default constructor where is defined how that matrix will be filled (user can't add positions smaller than 0 and bigger than 100) and one function getPosition which returns elements of matrix. Matrix teams has 2 rows and 11 columns. Rows represents teams (0 for red team and 1 for blue team), columns represents positions of players.
In class OffsidePosition there is only one function that returns true or false depending on the positions entered in matrix in the Teams class.
In function offsidePosition I have 6 variables 3 for red team and 3 for blue team. redTeamMin represents player closest to own goal line ,redTeamSecMin represents player second closest to own goal line, redTeamMax represents player closest to opponent goal line, blueTeamMin represents player closest to opponent goal line, blueTeamSecMax represents player second closest to own goal line, blueTeamMax represents player closest to own goal line.All variables have initial values that are expected to be changed.
There is for loop which will go through elements in rows.I check for red team row if current element is smaller than redTeamSecMin if yes then that is new value of redTeamSecMin then I check if is smaller than redTeamMin if yes then that is new value of redTeamMin and redTeamSecMin gets value of previous value of redTeamMin.Then I check If current element is bigger than redTeamMax if yes that is new value of redTeamMax. For blue team row, I check if current element is bigger than blueTeamSecMax if yes then that is new value of blueTeamSecMax then I check if is it bigger than blueTeamMax if yes than that is new value of blueTeamMax and blueTeamSecMax gets value of previous value of blueTeamMax. Then I check If current element is smaller than blueTeamMin if yes then that is new value of blueTeamMin. When that is done I check if is redTeamMax bigger than blueTeamSecMax or redTeamSecMin is bigger than blueTeamMin if yes than some of players are in offside position and function returns true ,if no then returns false.
In class Main I created instance of class Teams and instance of class OffsidePosition then I call function offsidePosition with argument teams and then that function returns if is there players in offside position or not.